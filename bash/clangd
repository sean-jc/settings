function gen-clangd-commands() {
	local repo=$(pwd | rev | cut -d'/' -f1 | rev)

	if [[ ! -f ./scripts/clang-tools/gen_compile_commands.py ]]; then
		printf "Needs to be run from top-level directory of kernel repo\n"
		return 1
	fi
	if [[ $repo != "slf" && ! -d $HOME/build/kernel/clangd_$repo ]]; then
		printf "Target build directory '$HOME/build/kernel/clangd_$repo doesn't exist\n"
		return 1
	fi

	mkdir .vscode
	rm -f ./.vscode/compile_commands.json
	if [[ $repo != "slf" ]]; then
		./scripts/clang-tools/gen_compile_commands.py -d $HOME/build/kernel/clangd_$repo -o ./.vscode/compile_commands.json
		return 0
	fi

	local cmd

	echo "[" >> ./.vscode/compile_commands.json
	while read -r cmd; do
		local file

		echo "$cmd" | grep -q -E "^make:"
		if [[ $? -eq 0 ]]; then
			continue
		fi

		file=$(echo $cmd | grep -oP '(?<=\-c\s)\S+')
		if [[ $? -ne 0 ]]; then
			continue
		fi

		echo " {" >> ./.vscode/compile_commands.json
		echo "  \"command\": \"$cmd\"," >> ./.vscode/compile_commands.json
		echo "  \"directory\": \"$HOME/go/src/kernel.org/slf/tools/testing/selftests/kvm\"," >> ./.vscode/compile_commands.json
		echo "  \"file\": \"$HOME/go/src/kernel.org/slf/tools/testing/selftests/kvm/$file\""  >> ./.vscode/compile_commands.json
		echo " }," >> ./.vscode/compile_commands.json
	done <<< $(LLVM=1 make -C tools/testing/selftests/kvm -Bnwk)

	# Strip the last comma, JSON doesn't allow trailing commas
	sed -i '$ s/.$//' .vscode/compile_commands.json
	echo "]" >>./.vscode/compile_commands.json
}
alias ccm='gen-clangd-commands'
