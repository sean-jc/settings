alias mounti386='sudo mount -o loop,offset=1048576 ~/images/qemu/ubuntu-18.04-server-i386.raw ~/images/qemu/mnt'
alias mountvm='sudo mount -o loop,offset=210763776 ~/images/qemu/ubuntu-22.04-server-kvm.raw ~/images/qemu/mnt'

function run-default-vm() {
	local img="kvm"

	if [[ $HOSTPOST =~ ^[a-z]+-vm ]]; then
		img="k2"
	elif [[ $HOSTPOST =~ ^[a-z]+-l2 ]]; then
		img="k3"
	fi

	if [[ -f $HOME/images/qemu/ubuntu-22.04-server-$img.img ]]; then
		img="ubuntu-22.04-server-$img"
	elif [[ -f $HOME/images/qemu/ubuntu-20.04-server-$img.img ]]; then
		img="ubuntu-20.04-server-$img"
	else
		img="ubuntu-18.04-server-$img"
	fi

	run_vm qemu $img $@
}
alias vm='run-default-vm'
alias mvm='modules=n vm'
alias vmd='daemon=y vm'
alias vm2='v2_cgroup=memory vm'
alias vm32='ovmf=32 vm'
alias dvm='gdb -x $SETTINGS/bin/debug_vm'
alias tvm='trace=1 vm'

function run-default-i386-vm() {
	local img="i386"

	if [[ $HOSTPOST =~ ^[a-z]+-(vm|i386) ]]; then
		img="i2"
	elif [[ $HOSTPOST =~ ^[a-z]+-(l2|i2) ]]; then
		img="i3"
	fi

	if [[ -f $HOME/images/qemu/ubuntu-22.04-server-$img.img ]]; then
		img="ubuntu-22.04-server-$img"
	elif [[ -f $HOME/images/qemu/ubuntu-20.04-server-$img.img ]]; then
		img="ubuntu-20.04-server-$img"
	else
		img="ubuntu-18.04-server-$img"
	fi

	run_vm qemu $img $@
}
alias ivm='i386=y run-default-i386-vm'
alias mivm='modules=n ivm'
# alias vb='mbr=y run_vm bios kvm'

function vm-mig-src {
	gb=32 modules=n cpus=16 cpuid="-invtsc" vm vm
}
function vm-mig-dst {
	migrate=6666 gb=32 modules=n cpus=16 cpuid="-invtsc" vm vm
}

# SGX, i.e. expose EPC
# alias vbd='daemon=y mbr=y run_vm bios kvm'
# alias vmi='epc=64M,prealloc vm'
# alias vmo='epc=128M,prealloc,reclaim vm'
# alias vms='epc="16M,prealloc 16M,prealloc 16M 16M 16M 12M" vm'
# alias vmsd='daemon=y vms'
# alias vepc='v2_cgroup=sgx_epc vms'

# alias vuefi='qemu=qemu img=uefi display=vnc iso=~/images/ubuntu/ubuntu-16.04.3-desktop-amd64.iso virtualmachine'
alias vanilla='virtio=false run_vm qemu'

# Get the PID of the VM.  Obviously expects a single VM to be running...
alias vpid='psg build/qemu | grep sean | tr -s " " | cut -f 2 -d " "'

function vm-stats() {
	local pid=$(vp)
	local cmd=$(cat /proc/$pid/cmdline | tr '\000' ' ')
	local vm_lines=$(cat /proc/$pid/status | grep --color=never -e Vm)
	local lines=$(cat /proc/$pid/status | grep --color=never -e Huge -e Rss)
	local line
	local field
	local mb

	if [ $# -gt 0 ]; then
		printf "$cmd\n\n"
	fi

	while read -r line; do
		field=$(echo $line | cut -f 1 -d " ")
		mb=$(echo $line | awk '{megs=$2/1024} END {print megs}')
		printf "%s\t\t%8.1f MB\n" $field $mb
	done <<< "$vm_lines"

	while read -r line; do
		field=$(echo $line | cut -f 1 -d " ")
		mb=$(echo $line | awk '{megs=$2/1024} END {print megs}')
		printf "%s\t%8.1f MB\n" $field $mb
	done <<< "$lines"

	if [[ -z $(getcap $HOME/bin/get_smaps | grep cap_sys_ptrace) ]]; then
		psudo setcap cap_sys_ptrace+ep $HOME/bin/get_smaps
	fi

	mb=$($HOME/bin/get_smaps $pid | grep -e AnonHugePages | awk '{ if($2>4) print $0} ' | awk -F ":" '{print $2}' | awk '{Total+=$1/1024} END {print Total}')
	printf "AnonHugePages:\t%8.1f MB\n" $mb
}
alias vms='vm-stats'
alias vmss='vm-stats true'


# alias hv='os=hyper-v run_vm qemu'
# alias hvd='os=hyper-v display=vnc run_vm qemu'
# alias hvi='os=hyper-v display=vnc iso1=~/images/hyper-v/virtio-win-0.1.126.iso run_vm qemu'
# alias hvnew='os=hyper-v display=vnc iso=~images/hyper-v/hyper-v-2016.iso iso1=~/images/hyper-v/virtio-win-0.1.126.iso run_vm qemu'

